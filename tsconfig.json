{
  "compilerOptions": {
    "strictNullChecks": true,
    "moduleResolution": "node",
    "experimentalDecorators": true,
    "jsx": "preserve",
    "noUnusedParameters": true,
    "noUnusedLocals": true,
    "noImplicitAny": true,
    "target": "ES6",
    "baseUrl": ".",
    "module":"CommonJS", 
    "paths": {
      "@/*": ["./src/*"],
      "components/*": ["./src/components/*"],
      "pages/*": ["./src/pages/*"],
      "router": ["./src/router/index.js"],
      "lib/*": ["./src/lib/*"],
      "util/*": ["./src/util/*"],
      "store/*": ["./src/store/*"],
      "ax/*": ["./src/axios/*"],
      "server": ["./src/lib/server"],
      "dingApi": ["./src/lib/dingApi"],
      "svg/*": ["./src/images/svg/*"],
      "images/*": ["./src/images/*"],
      "img/*": ["./src/images/*"],
    },
    "lib": [
      "dom",
      "es2017"
  ],
    "allowSyntheticDefaultImports": true,
    "rootDirs": ["/src"],
    "forceConsistentCasingInFileNames": true,
    "noImplicitReturns": true,
    "allowJs": true,
  },
  "include": ["./src"],
  "exclude": [
    "node_modules",
  ]
}

// {
//   "compilerOptions": {
//     "target": "ES6", //指定ECMAScript目标版本 
//     "sourceMap": true, //生成相应的.map文件。
//     "baseUrl": ".", //解析非相对模块名的基准目录
//     "jsx": "preserve", //在.tsx文件里支持JSX："React"或"Preserve"。查看JSX。
//     "allowSyntheticDefaultImports": true, //允许从没有设置默认导出的模块中默认导入。这并不影响代码的显示，仅为了类型检查。
//     "moduleResolution": "node",  //决定如何处理模块。或者是"Node"对于Node.js/io.js，或者是"Classic"（默认）。查看模块解析了解详情。
//     "rootDirs": ["/src", "/test"],  //根（root）文件夹列表
//     "forceConsistentCasingInFileNames": true,  //禁止对同一个文件的不一致的引用
//     "noImplicitReturns": true,  //不是函数的所有返回路径都有返回值时报错。
//     "suppressImplicitAnyIndexErrors": true,  //阻止--noImplicitAny对缺少索引签名的索引对象报错。
//     "noUnusedLocals": true,  //若有未使用的局部变量则抛错。
//     "allowJs": true,  //允许编译javascript文件。
//     "experimentalDecorators": true,  //启用装饰器
//     "module":"CommonJS",  //指定生成哪个模块系统代
//     "paths": {    //模块名到基于baseUrl的路径映射的列表。
//       "@/*": ["./src/*"]
//     },
//     "allowUnusedLabels":true, //不报告未使用的标签错误。
//     "diagnostics":true, //显示诊断信息。
//     "declaration":true,//生成相应的.d.ts文件。
//     "alwaysStrict":true, //以严格模式解析并为每个源文件生成"use strict"语句
//     "checkJs":true, //在.js文件中报告错误。与--allowJs配合使用。  检查所有js文件
//     "help":true, //打印帮助信息。
//     "noUnusedParameters":true,//若有未使用的参数则抛错。
//     "pretty":true,
//   },
//   "include": ["./src"],
//   "exclude": [
//     "node_modules",
//   ]
// }